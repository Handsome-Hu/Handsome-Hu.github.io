(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{597:function(e,v,t){"use strict";t.r(v);var s=t(14),_=Object(s.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("官方文档："),t("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/list.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("列表渲染 — Vue.js (vuejs.org)"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"列表显示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表显示"}},[e._v("#")]),e._v(" 列表显示")]),e._v(" "),t("ol",[t("li",[e._v("用于展示列表数据")]),e._v(" "),t("li",[e._v("语法："),t("code",[e._v('v-for="(item, index) in xxx" :key="yyy"')])]),e._v(" "),t("li",[e._v("可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）")])]),e._v(" "),t("ul",[t("li",[e._v("数组: "),t("code",[e._v("(item, index)")])]),e._v(" "),t("li",[e._v("对象: "),t("code",[e._v("(value, key)")])]),e._v(" "),t("li",[e._v("字符串："),t("code",[e._v("(char, index)")])]),e._v(" "),t("li",[e._v("数字："),t("code",[e._v("(number, index)")])])]),e._v(" "),t("h2",{attrs:{id:"key的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#key的原理"}},[e._v("#")]),e._v(" key的原理")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("虚拟DOM中"),t("code",[e._v("key")]),e._v("的作用：")]),e._v(" "),t("ul",[t("li",[e._v("key是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】, 随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：")])])]),e._v(" "),t("li",[t("p",[e._v("对比规则：")]),e._v(" "),t("ol",[t("li",[e._v("旧虚拟DOM中找到了与新虚拟DOM相同的"),t("code",[e._v("key")]),e._v("：\n"),t("ul",[t("li",[e._v("若虚拟DOM中内容没变, 直接使用之前的真实DOM")]),e._v(" "),t("li",[e._v("若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM")])])]),e._v(" "),t("li",[e._v("旧虚拟DOM中未找到与新虚拟DOM相同的"),t("code",[e._v("key")]),e._v("创建新的真实DOM，随后渲染到到页面。")])])]),e._v(" "),t("li",[t("p",[e._v("用"),t("code",[e._v("index")]),e._v("作为"),t("code",[e._v("key")]),e._v("可能会引发的问题：")]),e._v(" "),t("ol",[t("li",[e._v("若对数据进行：逆序添加、逆序删除等破坏顺序操作: 会产生没有必要的真实DOM更新 "),t("code",[e._v("==>")]),e._v(" 界面效果没问题, 但效率低")]),e._v(" "),t("li",[e._v("如果结构中还包含输入类的DOM： 会产生错误DOM更新 "),t("code",[e._v("==>")]),e._v("界面有问题")])])]),e._v(" "),t("li",[t("p",[e._v("开发中如何选择"),t("code",[e._v("key")]),e._v(":")]),e._v(" "),t("ol",[t("li",[e._v("最好使用每条数据的唯一标识作为"),t("code",[e._v("key")]),e._v(", 比如id、手机号、身份证号、学号等唯一值。")]),e._v(" "),t("li",[e._v("如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用"),t("code",[e._v("index")]),e._v("作为"),t("code",[e._v("key")]),e._v("是没有问题的。")])])])]),e._v(" "),t("h2",{attrs:{id:"vue监视数据的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue监视数据的原理"}},[e._v("#")]),e._v(" Vue监视数据的原理")]),e._v(" "),t("ol",[t("li",[e._v("vue会监视"),t("code",[e._v("data")]),e._v("中所有层次的数据。")]),e._v(" "),t("li",[e._v("如何监测对象中的数据？")])]),e._v(" "),t("blockquote",[t("p",[e._v("通过setter实现监视，且要在"),t("code",[e._v("new Vue")]),e._v("时就传入要监测的数据。")])]),e._v(" "),t("p",[e._v("① 对象中后追加的属性，Vue默认不做响应式处理")]),e._v(" "),t("p",[e._v("② 如需给后添加的属性做响应式，请使用如下API："),t("code",[e._v("Vue.set(target，propertyName/index，value)")]),e._v(" 或 "),t("code",[e._v("vm.$set(target，propertyName/index，value)")])]),e._v(" "),t("ol",[t("li",[e._v("如何监测数组中的数据？ 通过包裹数组更新元素的方法实现，本质就是做了两件事：\n"),t("ol",[t("li",[e._v("调用原生对应的方法对数组进行更新。")]),e._v(" "),t("li",[e._v("重新解析模板，进而更新页面。")])])]),e._v(" "),t("li",[e._v("在Vue修改数组中的某个元素一定要用如下方法：\n"),t("ol",[t("li",[e._v("使用这些API: "),t("code",[e._v("push()")]),e._v("、"),t("code",[e._v("pop()")]),e._v("、"),t("code",[e._v("shift()")]),e._v("、"),t("code",[e._v("unshift()")]),e._v("、"),t("code",[e._v("splice()")]),e._v("、"),t("code",[e._v("sort()")]),e._v("、"),t("code",[e._v("reverse()")])]),e._v(" "),t("li",[t("code",[e._v("Vue.set()")]),e._v(" 或 "),t("code",[e._v("vm.$set()")])])])])]),e._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[e._v("警告")]),e._v(" "),t("p",[t("code",[e._v("Vue.set()")]),e._v(" 和 "),t("code",[e._v("vm.$set()")]),e._v(" 不能给 "),t("code",[e._v("vm")]),e._v(" 或 "),t("code",[e._v("vm")]),e._v(" 的根数据对象 添加属性！！！")])]),e._v(" "),t("h2",{attrs:{id:"数组更新检测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组更新检测"}},[e._v("#")]),e._v(" 数组更新检测")]),e._v(" "),t("p",[e._v("Vue 将被侦听的数组的变更方法进行了包裹，所以它们也将会触发视图更新。这些被包裹过的方法包括：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("push()")])]),e._v(" "),t("li",[t("code",[e._v("pop()")])]),e._v(" "),t("li",[t("code",[e._v("shift()")])]),e._v(" "),t("li",[t("code",[e._v("unshift()")])]),e._v(" "),t("li",[t("code",[e._v("splice()")])]),e._v(" "),t("li",[t("code",[e._v("sort()")])]),e._v(" "),t("li",[t("code",[e._v("reverse()")])])]),e._v(" "),t("p",[e._v("下面这种方式不会触发视图更新：")]),e._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("persons"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" newP"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//并没有改变persons本身，数组内部发生了变化，但是没有调用变异方法，vue不会更新界面")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("相比之下，也有非变更方法，例如 filter()、concat() 和 slice()。它们不会变更原始数组，而总是返回一个新数组。当使用非变更方法时，可以用新数组替换旧数组。")]),e._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" fpersons "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" persons"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("filter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("p")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("includes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("searchName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])])}),[],!1,null,null,null);v.default=_.exports}}]);